{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"name\", \"errors\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport NameMap from './utils/NameMap';\nimport { defaultValidateMessages } from './utils/messages';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      _this.store = setValues({}, initialValues, _this.store);\n    }\n  };\n\n  this.getInitialValue = function (namePath) {\n    return getValue(_this.initialValues, namePath);\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  };\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  };\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _entity$isListField;\n\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.getFieldWarning = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.warnings;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n\n    var namePathListEntities = map.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Create cache\n\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.store = setValue(_this.store, namePath, _toConsumableArray(records)[0].value);\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.store = setValues({}, _this.initialValues);\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.store = setValue(_this.store, namePath, initialValue);\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, _excluded);\n\n      var namePath = getNamePath(name); // Value\n\n      if ('value' in data) {\n        _this.store = setValue(_this.store, namePath, data.value);\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n\n  this.initEntityValue = function (entity) {\n    var initialValue = entity.props.initialValue;\n\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n\n      if (prevValue === undefined) {\n        _this.store = setValue(_this.store, namePath, initialValue);\n      }\n    }\n  };\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      var mergedPreserve = preserve !== undefined ? preserve : _this.preserve;\n\n      if (mergedPreserve === false && (!isListField || subNamePath.length > 1)) {\n        var namePath = entity.getNamePath();\n        var defaultValue = isListField ? undefined : getValue(_this.initialValues, namePath);\n\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (// Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          _this.store = setValue(_this.store, namePath, defaultValue, true);\n        }\n      }\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref2) {\n        var onStoreChange = _ref2.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n    _this.store = setValue(_this.store, namePath, value);\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    }); // Notify dependencies children with parent update\n    // We need delay to trigger validate in case Field is under render props\n\n\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    }); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      _this.store = setValues(_this.store, store);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref3) {\n          var name = _ref3.name,\n              errors = _ref3.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref4) {\n        var fieldName = _ref4.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      /**\n       * Recursive validate if configured.\n       * TODO: perf improvement @zombieJ\n       */\n\n\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n\n        if ( // nameList[i] === undefined 说明是以 nameList 开头的\n        // ['name'] -> ['name','list']\n        namePath.every(function (nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === undefined;\n        })) {\n          namePathList.push(namePath);\n        }\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          ruleErrors.forEach(function (_ref5) {\n            var warningOnly = _ref5.rule.warningOnly,\n                errors = _ref5.errors;\n\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref6) {\n        var name = _ref6.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  };\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n};\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;","map":{"version":3,"names":["_slicedToArray","_objectSpread","_objectWithoutProperties","_toConsumableArray","_classCallCheck","_excluded","React","warning","HOOK_MARK","allPromiseFinish","NameMap","defaultValidateMessages","cloneByNamePathList","containsNamePath","getNamePath","getValue","matchNamePath","setValue","setValues","FormStore","forceRootUpdate","_this","formHooked","subscribable","store","fieldEntities","initialValues","callbacks","validateMessages","preserve","lastValidatePromise","getForm","getFieldValue","getFieldsValue","getFieldError","getFieldWarning","getFieldsError","isFieldsTouched","isFieldTouched","isFieldValidating","isFieldsValidating","resetFields","setFields","setFieldsValue","validateFields","submit","getInternalHooks","key","dispatch","initEntityValue","registerField","useSubscribe","setInitialValues","setCallbacks","setValidateMessages","getFields","setPreserve","getInitialValue","init","namePath","timeoutId","warningUnhooked","process","env","NODE_ENV","window","setTimeout","getFieldEntities","pure","arguments","length","undefined","filter","field","getFieldsMap","cache","forEach","set","getFieldEntitiesForNamePathList","nameList","map","name","get","INVALIDATE_NAME_PATH","filterFunc","Array","isArray","filteredNameList","entity","_entity$isListField","isListField","call","push","meta","getMeta","index","errors","getErrors","warnings","getWarnings","fieldError","_len","args","_key","arg0","arg1","namePathList","isAllFieldsTouched","every","some","shortNamePath","fieldNamePath","nameUnit","i","update","list","concat","isNamePathListTouched","entities","namePathListEntities","_ref","value","testField","resetWithFieldInitialValue","info","initialValue","props","records","Set","add","resetWithFields","formInitialValue","join","size","originValue","skipExist","requiredFieldEntities","_requiredFieldEntitie","apply","r","prevStore","notifyObservers","type","fields","fieldData","data","Object","defineProperty","prevValue","source","subNamePath","item","mergedPreserve","defaultValue","action","updateValue","_namePath","triggerName","mergedInfo","_ref2","onStoreChange","childrenFields","getDependencyChildrenFields","relatedFields","onValuesChange","changedValues","triggerOnFieldsChange","rootNamePath","children","dependencies2fields","dependencies","dependency","dependencyNamePath","fillChildren","has","isFieldDirty","filedErrors","onFieldsChange","_ref3","changedFields","_ref4","fieldName","options","provideNameList","promiseList","recursive","rules","promise","validateRules","then","catch","ruleErrors","mergedErrors","mergedWarnings","_ref5","warningOnly","rule","Promise","reject","summaryPromise","results","resultNamePathList","_ref6","returnPromise","resolve","errorList","result","values","errorFields","outOfDate","e","onFinish","err","console","error","onFinishFailed","useForm","form","formRef","useRef","_React$useState","useState","_React$useState2","forceUpdate","current","forceReRender","formStore"],"sources":["C:/Users/hp/Desktop/Assignments-2022/moviestips/node_modules/rc-field-form/es/useForm.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"name\", \"errors\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport NameMap from './utils/NameMap';\nimport { defaultValidateMessages } from './utils/messages';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      _this.store = setValues({}, initialValues, _this.store);\n    }\n  };\n\n  this.getInitialValue = function (namePath) {\n    return getValue(_this.initialValues, namePath);\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  };\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  };\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _entity$isListField;\n\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.getFieldWarning = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.warnings;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n\n    var namePathListEntities = map.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Create cache\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.store = setValue(_this.store, namePath, _toConsumableArray(records)[0].value);\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.store = setValues({}, _this.initialValues);\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.store = setValue(_this.store, namePath, initialValue);\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, _excluded);\n\n      var namePath = getNamePath(name); // Value\n\n      if ('value' in data) {\n        _this.store = setValue(_this.store, namePath, data.value);\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n\n  this.initEntityValue = function (entity) {\n    var initialValue = entity.props.initialValue;\n\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n\n      if (prevValue === undefined) {\n        _this.store = setValue(_this.store, namePath, initialValue);\n      }\n    }\n  };\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      var mergedPreserve = preserve !== undefined ? preserve : _this.preserve;\n\n      if (mergedPreserve === false && (!isListField || subNamePath.length > 1)) {\n        var namePath = entity.getNamePath();\n        var defaultValue = isListField ? undefined : getValue(_this.initialValues, namePath);\n\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (// Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          _this.store = setValue(_this.store, namePath, defaultValue, true);\n        }\n      }\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref2) {\n        var onStoreChange = _ref2.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n    _this.store = setValue(_this.store, namePath, value);\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    }); // Notify dependencies children with parent update\n    // We need delay to trigger validate in case Field is under render props\n\n\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    }); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      _this.store = setValues(_this.store, store);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref3) {\n          var name = _ref3.name,\n              errors = _ref3.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref4) {\n        var fieldName = _ref4.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      /**\n       * Recursive validate if configured.\n       * TODO: perf improvement @zombieJ\n       */\n\n\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n\n        if ( // nameList[i] === undefined 说明是以 nameList 开头的\n        // ['name'] -> ['name','list']\n        namePath.every(function (nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === undefined;\n        })) {\n          namePathList.push(namePath);\n        }\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          ruleErrors.forEach(function (_ref5) {\n            var warningOnly = _ref5.rule.warningOnly,\n                errors = _ref5.errors;\n\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref6) {\n        var name = _ref6.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  };\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n};\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}